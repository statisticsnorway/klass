services:
  mariadb:
    image: mariadb:11.7
    profiles: [ migration-testing, migrate-data ]
    container_name: klass_mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_USER: "klass"
      MARIADB_PASSWORD: ${MARIADB_LOCAL_PASSWORD}
      MARIADB_LOCAL_FILEPATH: ${MARIADB_LOCAL_FILEPATH}
      MARIADB_DATABASE: "klass"
  postgresql:
    image: postgres:17.4
    profiles: [ migration-testing, migrate-data, frontend, api, search ]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "klass"
      POSTGRES_DATABASE: "klass"
  klass-api:
    build:
      context: ../klass-api
      dockerfile: ../klass-api/Dockerfile
    command: [ "java", "-jar", "app.war" ]
    container_name: klass-api
    profiles: [ migration-testing, api ]
    depends_on:
      - postgresql
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
    environment:
      SPRING_PROFILES_ACTIVE: api, postgres-local, skip-indexing, embedded-solr
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "klass"
      POSTGRES_INSTANCE: postgresql
  klass-api-mariadb:
    image: source-mariadb-image:latest
    command: [ "java", "-jar", "app.war", "--spring.profiles.active=api, mariadb-local, skip-indexing, embedded-solr" ]
    container_name: klass-api-mariadb
    profiles: [ migration-testing ]
    depends_on:
      - mariadb
    ports:
      - "8082:8080"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_USER: "klass"
      MARIADB_PASSWORD: ${MARIADB_LOCAL_PASSWORD}
      MARIADB_LOCAL_FILEPATH: ${MARIADB_LOCAL_FILEPATH}
      MARIADB_DATABASE: "klass"
      SPRING_PROFILES_ACTIVE: "mariadb-local"
      MARIADB_INSTANCE: mariadb
  klass-api-search:
    image: target-postgres-image:latest
    container_name: klass-api
    command: [ "java", "-Xms2g", "-Xmx4g", "-jar", "app.war" ]
    profiles: [ search ]
    depends_on:
      - solr
      - postgresql
    ports:
      - "8083:8080"
    mem_limit: 8g
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 8G
    environment:
      SPRING_PROFILES_ACTIVE: "api,postgres-local,small-import"
      SPRING_DATA_SOLR_HOST: http://solr:8983/solr
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "klass"
      POSTGRES_INSTANCE: postgresql
  klass-forvaltning:
    build:
      context: ../klass-forvaltning
      dockerfile: ../klass-forvaltning/Dockerfile
    container_name: klass-forvaltning
    profiles: [ frontend ]
    ports:
      - "8081:8081"
    depends_on:
      - postgresql
    command: [ "java", "-XshowSettings:vm", "-Xms512m", "-Xmx2g", "-jar", "app.war" ]
    deploy:
      resources:
        limits:
          memory: 3G
    environment:
      SPRING_PROFILES_ACTIVE: frontend, hardcoded-user, postgres-local, ad-offline, small-import, skip-indexing, embedded-solr
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: klass
      POSTGRES_INSTANCE: postgresql
  solr:
    image: klass-shared-solr:5.5.2
    container_name: solr
    profiles: [search]
    ports:
      - "8983:8983"
    mem_limit: 4g
volumes:
  pgdata:
    name: klass_pgdata
  solr_data:
