services:
  postgresql:
    image: postgres:17.4
    profiles:
      [
        frontend,
        api,
        solr-search,
        open-search,
      ]
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "klass"
      POSTGRES_DB: "klass"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U klass -d klass" ]
      interval: 10s
      timeout: 5s
      retries: 5
  klass-api:
    build:
      context: ../klass-api
      dockerfile: ../klass-api/Dockerfile
    command: [ "java", "-Xms1g", "-jar", "app.war" ]
    profiles: [ api ]
    depends_on:
      - postgresql
    ports:
      - "8080:8080"
    mem_limit: 4g
    cpus: 1.0
    environment:
      SPRING_PROFILES_ACTIVE: api, postgres-local, skip-indexing, mock-search
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "klass"
      POSTGRES_INSTANCE: postgresql
  klass-api-open-search:
    build:
      context: ../klass-api
      dockerfile: ../klass-api/Dockerfile
    command: [ "java", "-Xms2g", "-Xmx4g", "-jar", "app.war" ]
    profiles: [ open-search ]
    depends_on:
      - opensearch
      - postgresql
    ports:
      - "8080:8080"
    mem_limit: 8g
    cpus: 1.0
    environment:
      SPRING_PROFILES_ACTIVE: "api,postgres-local,open-search-local"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: "klass"
      POSTGRES_INSTANCE: postgresql
      OPENSEARCH_URL: http://opensearch:9200
  klass-forvaltning:
    build:
      context: ../klass-forvaltning
      dockerfile: ../klass-forvaltning/Dockerfile
    profiles: [ frontend ]
    ports:
      - "8081:8081"
    depends_on:
      postgresql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 3G
    environment:
      SPRING_PROFILES_ACTIVE: frontend, hardcoded-user, postgres-local, ad-offline, small-import, skip-indexing, embedded-solr
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/klass
      SPRING_DATASOURCE_USERNAME: klass
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      KLASS_ENV_CLIENT_KLASS_MAIL_URL: "http://klass-mail:8080"
  klass-forvaltning-search:
    build:
      context: ../klass-forvaltning
      dockerfile: ../klass-forvaltning/Dockerfile
    profiles: [ solr-search ]
    ports:
      - "8081:8081"
    depends_on:
      - postgresql
    command:
      [ "java", "-XshowSettings:vm", "-Xms512m", "-Xmx2g", "-jar", "app.war" ]
    deploy:
      resources:
        limits:
          memory: 3G
    environment:
      SPRING_PROFILES_ACTIVE: frontend, hardcoded-user, postgres-local, ad-offline, small-import, remote-solr, skip-indexing
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: klass
      POSTGRES_INSTANCE: postgresql
      SPRING_DATA_SOLR_HOST: http://solr:8983/solr/
      KLASS_ENV_SEARCH_SOLR_URL: http://solr:8983/solr/
      KLASS_ENV_SEARCH_SOLR_CORE: Klass
  solr:
    build:
      context: ../klass-solr
      dockerfile: ../klass-solr/Dockerfile
    platform: linux/amd64
    profiles: [ solr-search ]
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
    mem_limit: 4g
  opensearch:
    image: opensearchproject/opensearch:3.0.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    profiles: [ open-search ]
    volumes:
      - opensearch_data:/usr/share/opensearch/data
volumes:
  pgdata:
    name: klass_pgdata
  solr_data:
  opensearch_data:
