-- Create initial version of postgres database

CREATE TABLE classification_family
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted       BIT NOT NULL,
    last_modified TIMESTAMP NOT NULL,
    uuid          VARCHAR(255) NOT NULL,
    version       INTEGER NOT NULL,
    icon_name     VARCHAR(255) NOT NULL,
    name          VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE classification_item
(
    dtype         VARCHAR(31) NOT NULL,
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted       BIT NOT NULL,
    last_modified TIMESTAMP NOT NULL,
    uuid          VARCHAR(255) NOT NULL,
    version       INTEGER NOT NULL,
    code          VARCHAR(255) NOT NULL,
    notes         VARCHAR(4000),
    official_name VARCHAR(1024) NOT NULL,
    short_name    VARCHAR(1024),
    level_id      BIGINT NOT NULL,
    parent_id     BIGINT,
    reference_id  BIGINT,
    PRIMARY KEY (id)
);

CREATE TABLE classification_series
(
    id                       BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted                  BOOLEAN NOT NULL,
    last_modified            TIMESTAMP NOT NULL,
    uuid                     VARCHAR(255) NOT NULL,
    version                  INTEGER NOT NULL,
    classification_type      VARCHAR(255) NOT NULL,
    copyrighted              BOOLEAN NOT NULL,
    description              VARCHAR(10000) NOT NULL,
    include_notes            BOOLEAN NOT NULL,
    include_short_name       BOOLEAN NOT NULL,
    internal                 BOOLEAN NOT NULL,
    name_en                  VARCHAR(255),
    name_nn                  VARCHAR(255),
    name_no                  VARCHAR(255),
    primary_language         INTEGER NOT NULL,
    classification_family_id BIGINT NOT NULL,
    contact_person_id        BIGINT NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE classification_series_statistical_units
(
    classification_series_id BIGINT NOT NULL,
    statistical_units_id     BIGINT NOT NULL
);

CREATE TABLE correspondence_map
(
    id                   BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted              BOOLEAN NOT NULL,
    last_modified        TIMESTAMP NOT NULL,
    uuid                 VARCHAR(255) NOT NULL,
    version              INTEGER NOT NULL,
    source_id            BIGINT,
    target_id            BIGINT,
    correspondence_table BIGINT,
    PRIMARY KEY (id)
);

CREATE TABLE correspondence_table
(
    id                         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted                    BOOLEAN NOT NULL,
    last_modified              TIMESTAMP NOT NULL,
    uuid                       VARCHAR(255) NOT NULL,
    version                    INTEGER NOT NULL,
    description                VARCHAR(255) NOT NULL,
    published_en               BOOLEAN NOT NULL,
    published_nn               BOOLEAN NOT NULL,
    published_no               BOOLEAN NOT NULL,
    source_id                  BIGINT NOT NULL,
    source_level_id            BIGINT,
    target_id                  BIGINT NOT NULL,
    target_level_id            BIGINT,
    statistical_classification BIGINT,
    PRIMARY KEY (id)
);

CREATE TABLE level
(
    id                         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted                    BOOLEAN NOT NULL,
    last_modified              TIMESTAMP NOT NULL,
    uuid                       VARCHAR(255) NOT NULL,
    version                    INTEGER NOT NULL,
    level_number               INTEGER NOT NULL,
    name                       VARCHAR(255) NOT NULL,
    statistical_classification BIGINT,
    PRIMARY KEY (id)
);

CREATE TABLE statistical_classification
(
    dtype                     VARCHAR(31) NOT NULL,
    id                        BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted                   BOOLEAN NOT NULL,
    last_modified             TIMESTAMP NOT NULL,
    uuid                      VARCHAR(255) NOT NULL,
    version                   INTEGER NOT NULL,
    introduction              VARCHAR(255) NOT NULL,
    published_en              BOOLEAN NOT NULL,
    published_nn              BOOLEAN NOT NULL,
    published_no              BOOLEAN NOT NULL,
    name                      VARCHAR(255),
    derived_from              VARCHAR(255),
    legal_base                VARCHAR(255),
    publications              VARCHAR(255),
    valid_from                VARCHAR(255),
    valid_to                  VARCHAR(255),
    classification_version_id BIGINT,
    contact_person_id         BIGINT,
    classification_id         BIGINT,
    predecessor_id            BIGINT,
    successor_id              BIGINT,
    PRIMARY KEY (id)
);

CREATE TABLE statistical_unit
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted       BOOLEAN NOT NULL,
    last_modified TIMESTAMP NOT NULL,
    uuid          VARCHAR(255) NOT NULL,
    version       INTEGER NOT NULL,
    name          VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE subscriber
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted       BOOLEAN NOT NULL,
    last_modified TIMESTAMP NOT NULL,
    uuid          VARCHAR(255) NOT NULL,
    version       INTEGER NOT NULL,
    email         VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE subscription
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted           BOOLEAN NOT NULL,
    last_modified     TIMESTAMP NOT NULL,
    uuid              VARCHAR(255) NOT NULL,
    version           INTEGER NOT NULL,
    expiry_date       TIMESTAMP NOT NULL,
    token             VARCHAR(255) NOT NULL,
    verification      INTEGER NOT NULL,
    classification_id BIGINT,
    subscriber        BIGINT,
    PRIMARY KEY (id)
);

CREATE TABLE "USER"
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    deleted       BOOLEAN NOT NULL,
    last_modified TIMESTAMP NOT NULL,
    uuid          VARCHAR(255) NOT NULL,
    version       INTEGER NOT NULL,
    fullname      VARCHAR(255) NOT NULL,
    role          INTEGER NOT NULL,
    section       VARCHAR(255) NOT NULL,
    username      VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE user_favorites
(
    user_id      BIGINT NOT NULL,
    favorites_id BIGINT NOT NULL
);