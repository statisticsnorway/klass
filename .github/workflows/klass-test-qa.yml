name: Klass build and deploy QA

on:
  push:
    branches:
      - chore/set-up-qa-deploy-pr
  pull_request:
    branches:
      - nais-migration
    paths:
      - "klass-api/**"
      - "klass-shared/**"
      - ".nais/**/klass-api.yaml"
      - ".github/workflows/klass-api-build-and-deploy.yaml"

jobs:
  # --- KLASS API ---
  build-api:
    name: Build Klass API
    permissions:
      contents: read
      id-token: write
      packages: read
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
      test-config-changed: ${{ steps.test-config-changed.outputs.changed != 'non-inputs' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Check what changed
        id: changed-files
        uses: nais/what-changed@main
        with:
          files: .nais/**/klass-api-qa.yaml
          main-branch-name: 'nais-migration'

      - name: Check for test config changes
        id: test-config-changed
        uses: nais/what-changed@main
        with:
          files: .nais/qa/klass-api-qa.yaml
          main-branch-name: 'nais-migration'

      - name: Build with Maven
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: mvn --batch-mode --update-snapshots install -pl '!:klass-forvaltning'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.changed-files.outputs.changed != 'only-inputs'
        id: docker-build-push
        uses: nais/docker-build-push@v0
        with:
          team: dapla-metadata
          image_suffix: api
          dockerfile: klass-api/Dockerfile
          docker_context: klass-api

  deploy-api-test:
    name: Deploy Klass API to test
    needs: build-api
    permissions:
      contents: read
      id-token: write
      packages: read
    runs-on: ubuntu-latest
    if: needs.build-api.outputs.test-config-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: test
          RESOURCE: .nais/qa/klass-api-qa.yaml
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
          WORKLOAD_IMAGE: ${{ needs.build-api.outputs.image }}
          TELEMETRY: ${{ needs.build-api.outputs.telemetry }}

  # --- KLASS MAIL ---
  build-mail:
    name: Build Klass Mail
    permissions:
      contents: read
      id-token: write
      packages: read
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
      config-changed: ${{ steps.changed-files.outputs.changed != 'non-inputs' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Check what changed
        id: changed-files
        uses: nais/what-changed@main
        with:
          files: .nais/**/klass-mail-qa.yaml
          main-branch-name: 'nais-migration'

      - name: Build with Maven
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: mvn --batch-mode --update-snapshots install -pl '!:klass-forvaltning'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.changed-files.outputs.changed != 'only-inputs'
        id: docker-build-push
        uses: nais/docker-build-push@v0
        with:
          team: dapla-metadata
          image_suffix: mail
          dockerfile: klass-mail/Dockerfile
          docker_context: klass-mail

  deploy-mail-test:
    name: Deploy Klass Mail to test
    needs: build-mail
    permissions:
      contents: read
      id-token: write
      packages: read
    runs-on: ubuntu-latest
    if: needs.build-mail.outputs.config-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: test
          RESOURCE: .nais/qa/klass-mail-qa.yaml
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
          WORKLOAD_IMAGE: ${{ needs.build-mail.outputs.image }}
          TELEMETRY: ${{ needs.build-mail.outputs.telemetry }}

  # --- KLASS SOLR ---
  #what-changed-solr:
   # name: Check Klass Solr changes
   # runs-on: ubuntu-latest
   # permissions:
   #   contents: read
   #   id-token: write
   #   actions: read
   # outputs:
   #   test-manifest-changed: ${{ steps.test-manifest-changed.outputs.changed != 'non-inputs' }}
   # steps:
   #   - uses: actions/checkout@v4
   #     with:
   #       fetch-depth: 0
   #   - name: Check for Test manifest changes
   #     id: test-manifest-changed
   #     uses: nais/what-changed@main
   #     with:
   #       files: .nais/qa/klass-solr-qa.yaml
   #       main-branch-name: 'nais-migration'
   #
  #deploy-solr-test:
   # name: Deploy Klass Solr to test
   # runs-on: ubuntu-latest
   # needs: what-changed-solr
   # permissions:
   #   contents: read
   #   id-token: write
   #   actions: read
   # if: needs.what-changed-solr.outputs.test-manifest-changed == 'true'
   # env:
   #   IMAGE: europe-north1-docker.pkg.dev/${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}/dapla-metadata/klass-solr:5.5.2
   # steps:
   #   - uses: actions/checkout@v4
   #     with:
   #       fetch-depth: 0
   #   - uses: nais/deploy/actions/deploy@v2
   #     env:
   #       CLUSTER: test
   #       RESOURCE: .nais/qa/klass-solr-qa.yaml
   #       WORKLOAD_IMAGE: ${{ env.IMAGE }}
   #       WAIT_TIMEOUT: 900
