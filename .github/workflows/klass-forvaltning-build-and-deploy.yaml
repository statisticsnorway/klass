name: Klass-forvaltning build and deploy

on:
  release:
    types: [ published ]
  push:
    branches:
      - nais-migration
    paths:
      - "klass-forvaltning/**"
      - ".nais/**/klass-forvaltning.yaml"
      - ".github/workflows/klass-forvaltning-build-and-deploy.yaml"


jobs:
  docker-build:
    name: Docker build
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
      prod-config-changed: ${{ steps.prod-config-changed.outputs.changed != 'non-inputs' }}
      test-config-changed: ${{ steps.test-config-changed.outputs.changed != 'non-inputs' }}
      only-config-changed: ${{ steps.changed-files.outputs.changed == 'only-inputs'}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
      - name: Check what changed
        id: changed-files
        uses: "nais/what-changed@main"
        with:
          files: .nais/**/klass-forvaltning.yaml
          main-branch-name: 'nais-migration' #TODO: Remove when we change branch back to main
      - name: Check for test config changes
        id: test-config-changed
        uses: "nais/what-changed@main"
        with:
          files: .nais/test/klass-forvaltning.yaml
          main-branch-name: 'nais-migration'  #TODO: Remove when we change branch back to main
      - name: Check for prod config changes
        id: prod-config-changed
        uses: "nais/what-changed@main"
        with:
          files: .nais/prod/klass-forvaltning.yaml
          main-branch-name: 'nais-migration'  #TODO: Remove when we change branch back to main
      - name: Build with Maven
        if: steps.changed-files.outputs.changed != 'only-inputs'
        working-directory: klass-forvaltning
        run: mvn -B install -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: dapla-metadata
          image_suffix: forvaltning
          dockerfile: klass-forvaltning/Dockerfile
          docker_context: klass-forvaltning

  deploy-test:
    name: Deploy to test
    needs: docker-build
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    runs-on: ubuntu-latest
    if: github.event_name != 'release' || needs.build.outputs.test-config-changed == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: test
          RESOURCE: .nais/test/klass-forvaltning.yaml
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}

  deploy-prod:
    name: Deploy to prod
    needs: docker-build
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (needs.build.outputs.prod-config-changed == 'true' && needs.build.outputs.only-config-changed == 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod
          RESOURCE: .nais/prod/klass-forvaltning.yaml
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}
