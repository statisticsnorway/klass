name: Klass-api build and deploy

on:
  release:
    types: [ published ]
  push:
    branches:
      - nais-migration
    paths:
      - "klass-api/**"
      - "klass-shared/**"
      - ".nais/**/klass-api.yaml"
      - ".github/workflows/klass-api-build-and-deploy.yaml"

jobs:
  build:
    name: Build
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry: ${{ steps.docker-build-push.outputs.telemetry }}
      prod-config-only: ${{ steps.prod-config-changed.outputs.changed == 'only-inputs' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Check what changed
        id: changed-files
        uses: "nais/what-changed@main"
        with:
          files: .nais/**/klass-api.yaml

      - name: Check for prod config changes
        id: prod-config-changed
        uses: "nais/what-changed@main"
        with:
          files: .nais/prod/klass-api.yaml

      - name: Build with Maven
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: mvn --batch-mode --update-snapshots install -pl '!:klass-forvaltning'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: dapla-metadata
          image_suffix: api
          dockerfile: klass-api/Dockerfile
          docker_context: klass-api

  deploy-test:
    name: Deploy to test
    needs: build
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    runs-on: ubuntu-latest
    if: github.event_name != 'release' && needs.build.outputs.prod-config-only != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: test
          RESOURCE: .nais/test/klass-api.yaml
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}

  deploy-prod:
    name: Deploy to prod
    needs: build
    permissions:
      contents: "read"
      id-token: "write"
      packages: "read"
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || needs.build.outputs.prod-config-only == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod
          RESOURCE: .nais/prod/klass-api.yaml
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
          WORKLOAD_IMAGE: ${{ needs.build.outputs.image }}
          TELEMETRY: ${{ needs.build.outputs.telemetry }}