info.build.name=@project.name@
info.build.description=@project.description@
info.build.version=@project.version@

# Application profiles:
#----------------------
# Profiles for production
#   production          = no test beans and only Active Directory login
#   mariadb             = use remote mariaDB database
#   remote-solr         = use remote Solr server (make sure klass.env.search.solr.url is correct)
#   skip-indexing       = skips indexing classifications for search at startup, (useful when running multiple nodes)
#
# Profiles for development
#   ad-offline          = offline active directory. Use if testing outside ssb network
#   small-import        = imports a small number of classifications from Stabas, useful during development
#   mock-mailserver     = outgoing emails are only logged
#   h2                  = use h2 database (stored on your filesystem)
#   h2-inmemory         = use h2 database but keep everything in memory only.(tests must use h2-inmemory)
#   embedded-solr       = run an instance of solr as part of the application (no need to start the solr application)
#----------------------

#-----------------------
#profiles for development (server configuration will override these)
#-----------------------
spring.profiles.active=frontend, h2, small-import, skip-indexing, ad-offline, embedded-solr

#Change port for when running multiple local applications
server.port=8081

management.context-path=/manage

# Environment properties, prefixed with klass.env. These properties may change between different environments
klass.env.mariadb.instance=localhost
klass.env.mariadb.password=klass
klass.env.logging.path=.
#Configurable url for API docs and schema locations used in exported XMLs
klass.env.server=al-klass-app-u1.ssb.no
klass.env.port=8080
#klass.env.server=localhost
#klass.env.port=80
klass.env.export.schema.baseUrl=http://${klass.env.server}:${klass.env.port}/schemas

klass.env.security.ldap.server=AW-DC02.ssb.no
klass.env.search.solr.url=http://localhost:8983/solr
klass.env.search.solr.core=Klass


# Login properties
klass.security.ldap.domain=ssb.no
klass.security.ldap.url=ldap://${klass.env.security.ldap.server}
klass.security.ldap.user=ldap@ssb.no
klass.security.ldap.password=J#Gsl3650pp
#remember me expires in 1 day (60 * 60 * 24)s
klass.security.ldap.remember=86400
# search properties
klass.search.resultsPerPage=10
klass.search.maxDescriptionLength=300

# Logging properties
logging.file=${klass.env.logging.path}/klass.log

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# Mail properties
# NB to send email to addresses outside ssb, hosts must be registered (SSB Infrastructure) in order to be allowed to relay mails.
# Test and prod hosts running tomcat have been registered, but if any new hosts are to be introduced also these must be registered
# in order to be allowed sending mails to non-ssb email addresses.
spring.mail.host=klientmail.ssb.no
spring.mail.port=25
spring.mail.properties.mail.from=noreply@ssb.no


spring.jpa.properties.hibernate.ejb.interceptor=no.ssb.klass.core.util.BaseEntityInterceptor
spring.jackson.serialization.indent_output=true
#logging.level.org.springframework.boot.autoconfigure.logging=DEBUG
#spring.jpa.show-sql=true