info.build.name=@project.name@
info.build.description=@project.description@
info.build.version=@project.version@
# Application profiles:
#----------------------
# Profiles for production
#   production          = no test beans and only Active Directory login
#   mariadb             = use remote mariaDB database
#   remote-solr         = use remote Solr server (make sure klass.env.search.solr.url is correct)
#   skip-indexing       = skips indexing classifications for search at startup, (useful when running multiple nodes)
#
# Profiles for development
#   hardcoded-user      = no user auth, sets a hardcoded user with either STANDARD or ADMIN roles
#   ad-offline          = wont try to connect to active directory. (test users will still work if enabled)
#   small-import        = imports a small number of classifications from legacy system, useful during development
#   mock-mailserver     = outgoing emails are only logged
#   h2                  = use h2 database (stored on your filesystem)
#   h2-inmemory         = use h2 database but keep everything in memory only.(tests must use h2-inmemory)
#   embedded-solr       = run an instance of solr as part of the application (no need to start the solr application)
#----------------------
#-----------------------
#profiles for development (server configuration will override these)
#-----------------------
spring.profiles.active=frontend, hardcoded-user, h2-inmemory, small-import, skip-indexing, ad-offline, embedded-solr
#Change port for when running multiple local applications
server.port=8081
management.context-path=/manage
# Environment properties, prefixed with klass.env. These properties may change between different environments
klass.env.mariadb.instance=${KLASS_ENV_MARIADB_INSTANCE:Undefined 127.0.0.1}
# Give password as environment variable
klass.env.mariadb.password=${KLASS_ENV_MARIADB_PASSWORD}
klass.env.logging.path=.
#Configurable url for schema locations used in exported XMLs
klass.env.server=localhost
klass.env.port=8080
klass.env.export.schema.baseUrl=http://${klass.env.server}:${klass.env.port}/schemas
klass.env.search.solr.url=http://localhost:8983/solr
klass.env.search.solr.core=Klass
# search properties
klass.search.resultsPerPage=10
klass.search.maxDescriptionLength=300
# Security properties
# Only for test/development user. Valid values are STANDARD, ADMIN.
klass.security.hardcoded.user.role=ADMIN
klass.security.oauth2.jwt.jwks.uri=https://auth.test.ssb.no/realms/ssb/protocol/openid-connect/certs
klass.security.oauth2.jwt.issuer=https://auth.test.ssb.no/realms/ssb
klass.security.oauth2.protected.paths=/klassui
# Logging properties
logging.file=${klass.env.logging.path}/klass.log
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
logging.level.no.ssb.klass=DEBUG
logging.level.org.springframework.security=TRACE
# Mail properties
spring.mail.port=25
spring.mail.host=mail.example.com
spring.mail.properties.mail.from=noreply@example.com
spring.jpa.properties.hibernate.session_factory.interceptor=no.ssb.klass.core.util.BaseEntityInterceptor
spring.jackson.serialization.indent_output=true
